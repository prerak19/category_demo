[{"/home/bacancy/Documents/Projects/demo/src/reportWebVitals.js":"1","/home/bacancy/Documents/Projects/demo/src/ParentComponent.js":"2","/home/bacancy/Documents/Projects/demo/src/App.js":"3","/home/bacancy/Documents/Projects/demo/src/index.js":"4","/home/bacancy/Documents/Projects/demo/src/Redux/reducer.js":"5","/home/bacancy/Documents/Projects/demo/src/checkbox.js":"6","/home/bacancy/Documents/Projects/demo/src/OptionsList.js":"7","/home/bacancy/Documents/Projects/demo/src/Redux/action.js":"8"},{"size":362,"mtime":1609757187754,"results":"9","hashOfConfig":"10"},{"size":4283,"mtime":1609840587480,"results":"11","hashOfConfig":"10"},{"size":181,"mtime":1609779524663,"results":"12","hashOfConfig":"10"},{"size":830,"mtime":1609778523285,"results":"13","hashOfConfig":"10"},{"size":1848,"mtime":1609839586000,"results":"14","hashOfConfig":"10"},{"size":1449,"mtime":1609840441020,"results":"15","hashOfConfig":"10"},{"size":2077,"mtime":1609840371083,"results":"16","hashOfConfig":"10"},{"size":713,"mtime":1609839509690,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wea4j6",{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/bacancy/Documents/Projects/demo/src/reportWebVitals.js",[],"/home/bacancy/Documents/Projects/demo/src/ParentComponent.js",["36","37","38"],"import React, { Component } from 'react';\nimport OptionsList from './OptionsList';\nimport { getCategories, deleteCategories, addCategories, editCategories } from './Redux/action';\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Row, Col, FormGroup, Label, Input, Button } from 'reactstrap';\nimport { connect } from 'react-redux';\n\n// Root component -> Manages all app state\nclass ParentComponent extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      selectedOptions: {},\n      crudData: false,\n      form: {\n        categoryName: '',\n        categoryId: '',\n        mainId: '',\n        subOptions: [],\n      },\n      isAdd: false,\n    }\n  }\n\n  onInputChange(name, value) {\n    this.setState({ form: { ...this.state.form, [name]: value } })\n  }\n\n  save = (name = 'add') => {\n    const { form, isAdd } = this.state;\n    if(form.categoryName===''){\n      alert('Please Enter Category Name!');\n      return;\n    }\n    let obj = {\n      ...form,\n      categoryId: form.categoryName,\n    }\n    if (name === 'edit') {\n      this.props.editCategories(obj);\n    } else {\n      this.props.addCategories(obj, isAdd);\n    }\n    this.setState({ crudData: false, isAdd: false })\n  }\n\n  toggleModal(name = \"\", option) {\n    let form = {};\n    if (name === 'add' || name === 'newData') {\n      form = {\n        categoryName: '',\n        categoryId: '',\n        mainId: option ? option.mainId : Math.random(),\n        subOptions: [],\n      }\n    } else {\n      form = {\n        categoryName: option.categoryName,\n        categoryId: option.categoryId,\n        subOptions: option.subOptions,\n        mainId: option.mainId,\n      }\n    }\n    this.setState({ crudData: !this.state.crudData, form, isAdd: name === 'newData' ? true : false })\n  }\n\n  deleteCategory = (data) => {\n    if (window.confirm('Are You Sure You Want to delete?')) {\n      this.props.deleteCategories(data);\n    }\n  }\n  expanData = (arr) => {\n    let selectedOptions = { ...this.state.selectedOptions };\n    arr.map((x, i) => {\n      if (x.categoryId) {\n        selectedOptions = { ...selectedOptions, [x.categoryId]: {} }\n      }\n      if (x.subOptions && x.subOptions.length > 0) {\n        this.expanData(x.subOptions);\n      }\n    });\n    return selectedOptions;\n  }\n\n  expandAll = () => {\n    const { categories } = this.props;\n    let selectedOptions = this.expanData(categories);\n    this.setState({ selectedOptions });\n  }\n\n  render() {\n    const { selectedOptions } = this.state;\n    const { form, crudData } = this.state;\n    return (\n      <div className=\"container\">\n        <div className=\"wrapper w-50\">\n          <h1>Categories</h1>\n          <Button className=\"mb-3\" color=\"success\" onClick={() => this.toggleModal('newData')} >Add New Category</Button>\n          <Button className=\"mb-3 ml-2\" color=\"success\" onClick={() => this.expandAll()} >Expand All</Button>\n          <OptionsList\n            options={this.props.categories}\n            onChange={(selectedOptions) => {\n              this.setState({ selectedOptions })\n            }}\n            selectedOptions={selectedOptions}\n            isFirst={true}\n            toggleModal={(value, option) => this.toggleModal(value, option)}\n            deleteCategory={this.deleteCategory}\n          />\n        </div>\n        <Modal isOpen={crudData} size=\"md\" key=\"modalCreate\">\n          <ModalHeader>{form.categoryId ? 'Edit Category' : 'Add Category'}</ModalHeader>\n          <ModalBody>\n            <FormGroup>\n              <Label for=\"categoryName\" className=\"font-weight-bold\">Category Name:</Label>\n              <Input name=\"categoryName\" placeholder=\"Title of Notes\"\n                value={form.categoryName}\n                onChange={(e) => this.onInputChange(e.target.name, e.target.value)} />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"success\" onClick={() => this.save(form.categoryId ? 'edit' : 'add')} >Save</Button>\n            <Button onClick={() => this.toggleModal('add')}>Close</Button>\n          </ModalFooter>\n        </Modal>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = state => ({\n  categories: state.categories\n});\n\nexport default connect(mapStateToProps, { getCategories, deleteCategories, addCategories, editCategories })(ParentComponent); \n","/home/bacancy/Documents/Projects/demo/src/App.js",["39"],"/home/bacancy/Documents/Projects/demo/src/index.js",[],["40","41"],"/home/bacancy/Documents/Projects/demo/src/Redux/reducer.js",["42"],"/home/bacancy/Documents/Projects/demo/src/checkbox.js",[],"/home/bacancy/Documents/Projects/demo/src/OptionsList.js",[],"/home/bacancy/Documents/Projects/demo/src/Redux/action.js",[],{"ruleId":"43","severity":1,"message":"44","line":4,"column":54,"nodeType":"45","messageId":"46","endLine":4,"endColumn":57},{"ruleId":"43","severity":1,"message":"47","line":4,"column":59,"nodeType":"45","messageId":"46","endLine":4,"endColumn":62},{"ruleId":"48","severity":1,"message":"49","line":73,"column":20,"nodeType":"50","messageId":"51","endLine":73,"endColumn":22},{"ruleId":"43","severity":1,"message":"52","line":1,"column":8,"nodeType":"45","messageId":"46","endLine":1,"endColumn":12},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"48","severity":1,"message":"49","line":13,"column":30,"nodeType":"50","messageId":"51","endLine":13,"endColumn":32},"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'logo' is defined but never used.","no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-global-assign","no-unsafe-negation"]